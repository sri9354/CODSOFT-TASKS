import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
#Loading dataset to Pandas DataFrame
credit_card_data = pd.read_csv('creditcard.csv')
#printing first 5 rows
credit_card_data.head()
credit_card_data.tail()
#dataset information
credit_card_data.info()
#checking the number of missing values in each column
credit_card_data.isnull().sum()
#Distribution of legit transactions and Fraudulent transactins
credit_card_data['Class'].value_counts()
#Separating the data for analysis
legit = credit_card_data[credit_card_data.Class == 0]
fraud = credit_card_data[credit_card_data.Class == 1]
print(legit.shape)
print(fraud.shape)
# Statistical measures of the data
legit.Amount.describe()
fraud.Amount.describe()
#Comparing the values for both transactions
credit_card_data.groupby('Class').mean()
legit_sample = legit.sample(n=492)
new_dataset = pd.concat([legit_sample, fraud], axis=0)
new_dataset.head()
new_dataset.tail()
new_dataset['Class'].value_counts()
new_dataset.groupby('Class').mean()
X = new_dataset.drop(columns='Class', axis=1)
Y = new_dataset['Class']
print(X)
print(Y)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)
print(X.shape, X_train.shape, X_test.shape)
model = LogisticRegression()
#training the logistic regressiion model with training model
model.fit(X_train, Y_train)
#Accuracy on training data
X_train_prediction = model.predict(X_train)
print(X_train_prediction)
training_data_accuracy = accuracy_score(Y_train, X_train_prediction)
print('Accuracy score of training data : ', training_data_accuracy)
#Accuracy on testing data
X_test_prediction = model.predict(X_test)
print(X_test_prediction)
testing_data_accuracy = accuracy_score(Y_test, X_test_prediction)
print('Accuracy score of testing data : ', testing_data_accuracy)
